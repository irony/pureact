{"version":3,"file":"createStore.modern.mjs","sources":["../src/createStore.js"],"sourcesContent":["const useState = require('./useState')\n\nmodule.exports = function createStore(reducer, initialState) {\n  let state = initialState || {}\n  let promisedState = state\n  const listeners = []\n  const store = {\n    getState: () => state,\n    dispatch: (action) => {\n      // for thunks\n      if (typeof action === 'function')\n        return action(store.dispatch, store.getState)\n      // for promises\n      if (Promise.resolve(action) === action)\n        return Promise.resolve(action).then(store.dispatch)\n      promisedState = Promise.resolve(promisedState).then((state) =>\n        reducer(state, action || {})\n      )\n      return Promise.resolve(promisedState).then((result) => {\n        state = result\n        listeners.forEach((listener, i) =>\n          listener(() => {\n            delete listeners[i]\n          })\n        )\n        return (state = result)\n      })\n    },\n    subscribe: (callback) => listeners.push(callback),\n  }\n  if (initialState) setTimeout(store.dispatch)\n\n  // connect hooks to store\n  useState.dispatch = store.dispatch\n  return store\n}\n"],"names":["useState","require","module","exports","reducer","initialState","state","promisedState","listeners","store","getState","dispatch","action","Promise","resolve","then","result","forEach","listener","i","subscribe","callback","push","setTimeout"],"mappings":"AAAA,MAAMA,EAAWC,QAAQ,cAEzBC,OAAOC,QAAU,SAAqBC,EAASC,GAC7C,IAAIC,EAAQD,GAAgB,GACxBE,EAAgBD,EACpB,MAAME,EAAY,GACZC,EAAQ,CACZC,SAAU,IAAMJ,EAChBK,SAAWC,GAEa,mBAAXA,EACFA,EAAOH,EAAME,SAAUF,EAAMC,UAElCG,QAAQC,QAAQF,KAAYA,EACvBC,QAAQC,QAAQF,GAAQG,KAAKN,EAAME,WAC5CJ,EAAgBM,QAAQC,QAAQP,GAAeQ,KAAMT,GACnDF,EAAQE,EAAOM,GAAU,KAEpBC,QAAQC,QAAQP,GAAeQ,KAAMC,IAC1CV,EAAQU,EACRR,EAAUS,QAAQ,CAACC,EAAUC,IAC3BD,EAAS,YACAV,EAAUW,MAGbb,EAAQU,KAGpBI,UAAYC,GAAab,EAAUc,KAAKD,IAM1C,OAJIhB,GAAckB,WAAWd,EAAME,UAGnCX,EAASW,SAAWF,EAAME,SACnBF"}